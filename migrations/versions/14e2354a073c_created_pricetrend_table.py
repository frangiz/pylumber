"""Created PriceTrend table.

Revision ID: 14e2354a073c
Revises: 484251bc6c49
Create Date: 2022-05-28 13:15:34.683917

"""
from itertools import groupby
from operator import attrgetter
from typing import List

import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm.session import Session

from app.models import PriceSnapshot, PriceTrend, Product

# revision identifiers, used by Alembic.
revision = "14e2354a073c"
down_revision = "484251bc6c49"
branch_labels = None
depends_on = None


def filter_repeating_values(values: PriceSnapshot) -> List[PriceSnapshot]:
    """Removes duplicated values (checking the price), but keeping the first and last in the group."""
    res = []
    for _, g in groupby(values, attrgetter("price")):
        group = list(g)
        res.append(group[0])
        if group[0].date != group[-1].date:
            res.append(group[-1])
    return res


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "price_trend",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.String(length=16), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###

    session = Session(bind=op.get_bind())
    products = Product.query.all()
    for product in products:
        price_snapshots = PriceSnapshot.query.filter_by(product_id=product.id).all()
        for filtered_price in filter_repeating_values(price_snapshots):
            session.add(
                PriceTrend(
                    product_id=product.id,
                    date=filtered_price.date,
                    price=filtered_price.price,
                )
            )
    session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("price_trend")
    # ### end Alembic commands ###
